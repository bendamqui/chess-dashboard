{"version":3,"sources":["images/avatars/0.jpg","images/shards-dashboards-logo.svg","components/layout/MainNavbar/NavbarNav/Notifications.js","flux/constants.js","components/layout/MainNavbar/NavbarNav/UserActions.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","components/layout/MainFooter.js","layouts/Default.js","utils/chart.js","components/charts/Pie.js","components/charts/Line.js","views/Dashboard.js","components/common/PageTitle.js","views/ChartForm.js","components/visualization/Settings.js","components/visualization/ActionButtons.js","views/Visualization.js","routes.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","React","Component","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","to","htmlBefore","htmlAfter","store","Store","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","registerToActions","bind","assertThisInitialized","toggleSidebar","register","actionType","_ref","payload","Constants","emit","callback","on","removeListener","EventEmitter","MainNavbar","layout","stickyTop","classes","classNames","react_default","a","createElement","className","shards_react_es","type","defaultProps","SidebarMainNavbar","props","handleToggleSidebar","dispatch","hideLogoText","href","style","lineHeight","id","maxWidth","src","require","alt","onClick","SidebarSearch","display","minHeight","seamless","placeholder","aria-label","SidebarNavItem","item","tag","RouteNavLink","dangerouslySetInnerHTML","__html","SidebarNavItems","state","getSidebarItems","onChange","addChangeListener","removeChangeListener","setState","objectSpread","items","map","idx","MainSidebar_SidebarNavItem","key","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","MainFooter","contained","menuItems","copyright","fluid","Link","DefaultLayout","children","noNavbar","noFooter","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","layout_MainFooter","Chart","defaults","LineWithLine","line","controllers","extend","draw","ease","prototype","chart","tooltip","_active","length","activePoint","ctx","x","tooltipPosition","topY","scales","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","Pie","prepareChartsData","data","chartData","datasets","hoverBorderColor","labels","forEach","row","_this$props$chart$spe","spec","metrics","dimensions","push","field","_id","handleDelete","axios","delete","concat","then","removeChart","index","canvasRef","createRef","get","getChartData","chartConfig","options","legend","position","padding","boxWidth","cutoutPercentage","tooltips","custom","mode","plugins","colorschemes","scheme","chartOptions","current","small","height","ref","NavLink","pathname","theme","Line","setSpecMap","specMap","toConsumableArray","reduce","getLabel","value","datePartsToDate","dateParts","parts","filter","undefined","join","_this$props$chart$spe2","groupByField","namedDatasets","rowIndex","_ref2","label","fill","_ref3","override","Array","from","_","i","backgroundColor","borderColor","pointBackgroundColor","pointHoverBackgroundColor","borderWidth","pointRadius","pointHoverRadius","borderDash","pointBorderColor","Dashboard","charts","getChart","splice","_this2","charts_Pie","charts_Line","_this3","noGutters","xs","createCharts","PageTitle","subtitle","attrs","objectWithoutProperties","assign","ChartForm","handleSubmit","e","preventDefault","preparePayload","verb","history","_this$state","chartType","obj","handleTitleInput","target","handleSelect","defaultValue","defineProperty","optionsMap","metricOptions","dimensionOptions","chartTypeOptions","option","_ref3$chart","location","buildOptionsMap","_ref4","getSelectOptions","preFillForm","_ref6","asyncToGenerator","regenerator_default","mark","_callee2","_ref5","_ref5$data","wrap","_context2","prev","next","abrupt","stop","_x","apply","arguments","common_PageTitle","flush","onSubmit","form","htmlFor","react_select_browser_esm","closeMenuOnSelect","isMulti","goBack","Settings","handleStart","disabledStart","onStart","handleShowNotation","checked","showNotation","handlePieceCount","pieceCount","handleOrientation","orientation","min","disabled","memorizeMode","checkAnswerMode","answerMode","ActionButtons","buttonDisabled","name","handleNext","handleReady","loadingMode","routes","path","exact","component","Redirect","Visualization","_callee","_context","getRandomPosition","sent","setMemorizeMode","draggable","squareStyles","setAnswerMode","sparePieces","setCheckAnswerMode","params","settings","fen","handleOnStart","solution","getFullBoardPosition","answer","getSquareStyles","keys","square","fullBoardPosition","column","rank","getCurrentPosition","Settings_Settings","chessboard_min_default","width","getPosition","ActionButtons_ActionButtons","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","basename","process","REACT_APP_BASENAME","route","Route","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.882c2a32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/0.73476783.jpg\";","module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.60a85991.svg\";","import React from \"react\";\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\n\nexport default class Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleNotifications = this.toggleNotifications.bind(this);\n  }\n\n  toggleNotifications() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem className=\"border-right dropdown notifications\">\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">&#xE7F4;</i>\n            <Badge pill theme=\"danger\">\n              2\n            </Badge>\n          </div>\n        </NavLink>\n        <Collapse\n          open={this.state.visible}\n          className=\"dropdown-menu dropdown-menu-small\"\n        >\n          <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE6E1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">Analytics</span>\n              <p>\n                Your website’s active users count increased by{\" \"}\n                <span className=\"text-success text-semibold\">28%</span> in the\n                last week. Great job!\n              </p>\n            </div>\n          </DropdownItem>\n          <DropdownItem>\n            <div className=\"notification__icon-wrapper\">\n              <div className=\"notification__icon\">\n                <i className=\"material-icons\">&#xE8D1;</i>\n              </div>\n            </div>\n            <div className=\"notification__content\">\n              <span className=\"notification__category\">Sales</span>\n              <p>\n                Last week your store’s sales count decreased by{\" \"}\n                <span className=\"text-danger text-semibold\">5.52%</span>. It\n                could have been worse!\n              </p>\n            </div>\n          </DropdownItem>\n          <DropdownItem className=\"notification__all text-center\">\n            View all Notifications\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\n\nexport default class UserActions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={require(\"./../../../../images/avatars/0.jpg\")}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">Sierra Brooks</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem tag={Link} to=\"user-profile\">\n            <i className=\"material-icons\">&#xE7FD;</i> Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"edit-user-profile\">\n            <i className=\"material-icons\">&#xE8B8;</i> Edit Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"file-manager-list\">\n            <i className=\"material-icons\">&#xE2C7;</i> Files\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"transaction-history\">\n            <i className=\"material-icons\">&#xE896;</i> Transactions\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem tag={Link} to=\"/\" className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    {\n      title: \"Dashboard\",\n      to: \"/dashboard\",\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Visualization\",\n      to: \"/visualization\",\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\n      htmlAfter: \"\"\n    },    \n  ];\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarSearch from \"./NavbarSearch\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          {/* <NavbarSearch />\n          <NavbarNav />\n          <NavbarToggle /> */}\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top mr-1\"\n                style={{ maxWidth: \"25px\" }}\n                src={require(\"../../../images/shards-dashboards-logo.svg\")}\n                alt=\"Shards Dashboard\"\n              />\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                  Chess Dashboard\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\n\nconst SidebarNavItem = ({ item }) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.htmlBefore && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n        />\n      )}\n      {item.title && <span>{item.title}</span>}\n      {item.htmlAfter && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n        />\n      )}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"../../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        <SidebarSearch />\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nMainSidebar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nMainSidebar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default MainSidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\n\nconst MainFooter = ({ contained, menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid={contained}>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <NavItem key={idx}>\n              <NavLink tag={Link} to={item.to}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.propTypes = {\n  /**\n   * Whether the content is contained, or not.\n   */\n  contained: PropTypes.bool,\n  /**\n   * The menu items array.\n   */\n  menuItems: PropTypes.array,\n  /**\n   * The copyright info.\n   */\n  copyright: PropTypes.string\n};\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © 2018 DesignRevision\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"#\"\n    },\n    {\n      title: \"Services\",\n      to: \"#\"\n    },\n    {\n      title: \"About\",\n      to: \"#\"\n    },\n    {\n      title: \"Products\",\n      to: \"#\"\n    },\n    {\n      title: \"Blog\",\n      to: \"#\"\n    }\n  ]\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/layout/MainFooter\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: true\n};\n\nexport default DefaultLayout;\n","import Chart from 'chart.js';\n\nChart.defaults.LineWithLine = Chart.defaults.line;\nChart.controllers.LineWithLine = Chart.controllers.line.extend({\n  draw(ease) {\n    Chart.controllers.line.prototype.draw.call(this, ease);\n\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\n      const activePoint = this.chart.tooltip._active[0];\n      const { ctx } = this.chart;\n      const { x } = activePoint.tooltipPosition();\n      const topY = this.chart.scales['y-axis-0'].top;\n      const bottomY = this.chart.scales['y-axis-0'].bottom;\n\n      // Draw the line\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(x, topY);\n      ctx.lineTo(x, bottomY);\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = '#ddd';\n      ctx.stroke();\n      ctx.restore();\n    }\n  },\n});\n\nexport default Chart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Row,\n  Col,  \n  Card,\n  Button,\n  CardHeader,\n  CardBody,\n  CardFooter\n} from \"shards-react\";\n\nimport axios from 'axios';\n\nimport Chart from \"../../utils/chart\";\nimport 'chartjs-plugin-colorschemes';\n\nclass Pie extends React.Component {\n  constructor(props) {    \n    super(props);        \n    this.canvasRef = React.createRef();\n  }\n\n  getChartData() {    \n    return axios.get(`/api/charts/${this.props.chart._id}/data`)      \n      .then(this.prepareChartsData)\n  }\n\n  prepareChartsData = ({data}) => {    \n    const chartData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#ffffff\",\n          data: [],        \n        }\n      ],\n      labels: []\n    }\n        \n    data.forEach(row => { \n      const { metrics, dimensions } = this.props.chart.spec;\n      chartData.datasets[0].data.push(row[metrics[0].field])      \n      chartData.labels.push(row._id[dimensions[0].field])\n    })\n\n    return chartData;\n  }\n\n  handleDelete = () => {\n    const {_id} = this.props.chart;            \n    axios.delete(`/api/charts/${_id}`)\n      .then(() => {\n        this.props.removeChart(this.props.index);\n      })\n  }\n\n  async componentDidMount() {\n    const chartData = await this.getChartData();\n    \n    const chartConfig = {\n      type: \"pie\",      \n      data: chartData,\n      options: {\n        ...{        \n          legend: {\n            position: \"bottom\",\n            labels: {\n              padding: 25,\n              boxWidth: 20\n            }\n          },\n          cutoutPercentage: 0,\n          tooltips: {\n            custom: false,\n            mode: \"index\",\n            position: \"nearest\"\n          },\n          plugins: {\n            colorschemes: {\n              scheme: 'brewer.Paired12'\n            }\n          }\n        },\n        ...this.props.chartOptions\n      }\n    };\n    \n    new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"d-flex py-0\">\n          <canvas\n            height=\"220\"\n            ref={this.canvasRef}\n            className=\"blog-users-by-device m-auto\"\n          />\n        </CardBody>\n        <CardFooter className=\"border-top\">\n          <Row>\n            \n            <Col className=\"text-right\">                              \n              <NavLink  to={{pathname: '/chart', state: {chart: this.props.chart}}}>\n              <Button type=\"submit\" theme=\"primary\" className=\"mb-2 mr-1\">\n              <i className=\"material-icons\">edit</i>                \n              </Button>                                      \n              </NavLink>\n              <Button \n                onClick={this.handleDelete}\n                theme=\"danger\" \n                className=\"mb-2 mr-1\">\n                <i className=\"material-icons\">delete</i>                \n              </Button>              \n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\nPie.propTypes = {\n  \n  /**\n   * The chart definiton from the db.\n   */\n  chart: PropTypes.object,\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart config object.\n   */\n  chartConfig: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object,\n  /**\n   * The chart data.\n   */\n  chartData: PropTypes.object,\n\n  /**\n   * The index of the chart on the dashboard.\n   */\n  index: PropTypes.number,\n\n  /**\n   * Remove chart from the dashboard\n   */\n  removeChart: PropTypes.func\n};\n\n\nexport default Pie;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport axios from 'axios';\nimport PropTypes from \"prop-types\";\nimport { Row, Col, Card, CardHeader, CardFooter, CardBody, Button } from \"shards-react\";\n\nimport Chart from 'chart.js';\nimport 'chartjs-plugin-colorschemes';\n\nclass Line extends React.Component {\n  constructor(props) {\n    super(props);    \n    this.specMap = {};\n    this.setSpecMap();\n    this.canvasRef = React.createRef();\n  }\n\n  setSpecMap = () => {\n    const {chart: {spec: {metrics, dimensions}}} = this.props;\n    this.specMap = [...metrics, ...dimensions].reduce((map, row) => {\n        map[row.field] = row;\n        return map;\n    }, {})    \n  }\n\n  handleDelete = () => {\n    const {_id} = this.props.chart;            \n    axios.delete(`/api/charts/${_id}`)\n      .then(() => {\n        this.props.removeChart(this.props.index);\n      })\n  }\n\n  getChartData() {    \n    return axios.get(`/api/charts/${this.props.chart._id}/data`);\n  }\n\n  getLabel = (value, field) => {\n    const type = this.specMap[field].type;\n    if (type === 'dateParts') {\n      return this.datePartsToDate(value);\n    }\n    return value;\n\n  }\n  \n  datePartsToDate = (dateParts) => {\n    return ['year', 'month', 'day']\n      .reduce((parts, key) => {\n        parts.push(dateParts[key]);\n        return parts;\n      }, [])\n      .filter((value) => {\n        return value !== undefined;\n      })\n      .join('/')\n\n  }\n\n  prepareChartsData = ({data}) => {    \n    if (data.length === 0) {\n      return []\n    }        \n    \n    // set labels xAxis\n    const { metrics, dimensions } = this.props.chart.spec;\n    \n    const groupByField = dimensions[0].field;\n    const labels = [];\n    const datasets = []\n    const namedDatasets = []\n        \n    // reduce ?\n    data.forEach((row, rowIndex) => {      \n      labels.push(this.getLabel(row._id[groupByField], groupByField));\n      metrics.forEach(({field, label}) => {        \n        const value = row[field];\n        if (rowIndex === 0) {\n          namedDatasets[field] = {\n            label: label,\n            data: [],\n            fill: false,\n          }\n        }\n        namedDatasets[field].data.push(value);\n      })\n    })\n\n    metrics.forEach(({field}) => {\n      datasets.push(namedDatasets[field]);\n    })\n\n    return {\n      labels,\n      datasets\n    }\n  }\n  \n  async componentDidMount() {\n    const data = await this.getChartData()          \n      .then(this.prepareChartsData)\n          \n    const chartConfig = {\n      type: 'line',\n      data,      \n      options: {\n        plugins: {\n          colorschemes: {\n            scheme: 'brewer.Paired12',\n            override: true,\n          }\n        }\n      }\n    };    \n    new Chart(this.canvasRef.current, chartConfig);    \n  }\n\n  render() {\n    const { title } = this.props;\n    return (\n      <Card small className=\"h-100\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">{title}</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0\">          \n          <canvas\n            height=\"120\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n          />\n        </CardBody>\n        <CardFooter className=\"border-top\">\n          <Row>\n            \n            <Col className=\"text-right\">                              \n              <NavLink  to={{pathname: '/chart', state: {chart: this.props.chart}}}>\n              <Button type=\"submit\" theme=\"primary\" className=\"mb-2 mr-1\">\n              <i className=\"material-icons\">edit</i>                \n              </Button>                                      \n              </NavLink>\n              <Button \n                onClick={this.handleDelete}\n                theme=\"danger\" \n                className=\"mb-2 mr-1\">\n                <i className=\"material-icons\">delete</i>                \n              </Button>              \n            </Col>\n          </Row>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\n\n\nLine.propTypes = {\n  /**\n   * The component's title.\n   */\n  title: PropTypes.string,\n  /**\n   * The chart dataset.\n   */\n  chartData: PropTypes.object,\n  /**\n   * The Chart.js options.\n   */\n  chartOptions: PropTypes.object\n};\n\nLine.defaultProps = {\n  title: \"Users Overview\",\n  chartData: {\n    labels: Array.from(new Array(30), (_, i) => (i === 0 ? 1 : i)),\n    datasets: [\n      {\n        label: \"Current Month\",\n        fill: \"start\",\n        data: [\n          500,\n          800,\n          320,\n          180,\n          240,\n          320,\n          230,\n          650,\n          590,\n          1200,\n          750,\n          940,\n          1420,\n          1200,\n          960,\n          1450,\n          1820,\n          2800,\n          2102,\n          1920,\n          3920,\n          3202,\n          3140,\n          2800,\n          3200,\n          3200,\n          3400,\n          2910,\n          3100,\n          4250\n        ],\n        backgroundColor: \"rgba(0,123,255,0.1)\",\n        borderColor: \"rgba(0,123,255,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgb(0,123,255)\",\n        borderWidth: 1.5,\n        pointRadius: 0,\n        pointHoverRadius: 3\n      },\n      {\n        label: \"Past Month\",\n        fill: \"start\",\n        data: [\n          380,\n          430,\n          120,\n          230,\n          410,\n          740,\n          472,\n          219,\n          391,\n          229,\n          400,\n          203,\n          301,\n          380,\n          291,\n          620,\n          700,\n          300,\n          630,\n          402,\n          320,\n          380,\n          289,\n          410,\n          300,\n          530,\n          630,\n          720,\n          780,\n          1200\n        ],\n        backgroundColor: \"rgba(255,65,105,0.1)\",\n        borderColor: \"rgba(255,65,105,1)\",\n        pointBackgroundColor: \"#ffffff\",\n        pointHoverBackgroundColor: \"rgba(255,65,105,1)\",\n        borderDash: [3, 3],\n        borderWidth: 1,\n        pointRadius: 0,\n        pointHoverRadius: 2,\n        pointBorderColor: \"rgba(255,65,105,1)\"\n      }\n    ]\n  }\n};\n\nexport default Line;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport PieChart from \"../components/charts/Pie\";\nimport LineChart from \"../components/charts/Line\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport axios from 'axios'\n\n\nclass Dashboard extends React.Component {    \n    constructor(props) {      \n      super(props);\n      this.state = {        \n        charts: []\n      }      \n    }\n\n    componentDidMount() {\n       this.getChart();      \n    }\n    \n    removeChart(index)  {\n      const charts = [...this.state.charts];      \n      charts.splice(index, 1);\n      \n      this.setState({charts})\n    }\n\n    createCharts() {\n      const charts = []\n      this.state.charts.forEach((chart, key) => {        \n        if (chart.type === 'pie') {\n          charts.push(\n            <Col key={chart._id} lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-4\">\n              <PieChart index={key} title={chart.title} chart={chart} removeChart={this.removeChart.bind(this)}/>\n            </Col>\n          )\n        } else if (chart.type === 'line') {\n          charts.push(\n            <Col key={chart._id} lg=\"12\" md=\"6\" sm=\"12\" className=\"mb-4\">\n              <LineChart index={key} title={chart.title} chart={chart} removeChart={this.removeChart.bind(this)}/>\n            </Col>\n          )\n        }\n      })\n      return charts;\n    }\n\n    getChart() {\n      axios('/api/charts')        \n        .then(({data: charts}) => {\n          this.setState({charts})          \n        })\n    }\n\n    render() {\n      return (\n          <Container fluid className=\"main-content-container px-4\">\n            \n            {/* Page Header */}\n            <Row noGutters className=\"page-header py-4\">\n              <Col xs=\"12\" sm=\"4\" className=\"page-title\">\n              <span > Dashboard </span>\n              <RouteNavLink  to=\"/chart\" className=\"text-default\">              \n                <i className=\"material-icons\">add</i>\n              </RouteNavLink>                                                \n              </Col>\n              {/* <PageTitle title=\"Dashboard\" className=\"text-sm-left mb-3\" />               */}\n            </Row>    \n\n            <Row>              \n              {this.createCharts()}              \n\n              {/* Users Overview */}\n              {/* <Col lg=\"8\" md=\"12\" sm=\"12\" className=\"mb-4\">\n                <UsersOverview />\n              </Col>       */}\n\n        </Row>\n      </Container>\n      )\n    }\n  \n  };\n\nexport default Dashboard;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import React from \"react\";\n\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  FormInput,\n  ListGroup,\n  ListGroupItem,\n  Button,\n  Form\n} from \"shards-react\";\n\nimport PageTitle from \"../components/common/PageTitle\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\n\nclass ChartForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.optionsMap = {\n      metricOptions: {},\n      dimensionOptions: {},\n      chartTypeOptions: {}\n    };\n    this.state = {\n      title: \"\",\n      chartType: [],\n      metrics: [],\n      dimensions: [],\n      metricOptions: [],\n      dimensionOptions: [],\n      chartTypeOptions: [\n        { value: \"pie\", label: \"Pie\" },\n        { value: \"line\", label: \"Line\" }\n      ]\n    };\n  }\n\n  buildOptionsMap() {\n    [\"metricOptions\", \"dimensionOptions\", \"chartTypeOptions\"].forEach(key => {\n      this.state[key].forEach(option => {\n        this.optionsMap[key][option.value] = option;\n      });\n    });\n  }\n\n  preFillForm() {\n    let { chart: { _id, title, type: chartType, spec } = {} } =\n      this.props.location.state || {};\n\n    if (_id) {\n      this.buildOptionsMap();\n      [\"metrics\", \"dimensions\"].forEach(key => {\n        spec[key] = spec[key].map(({ field: value, label }) => {\n          return { value, label };\n        });\n      });\n\n      chartType = this.optionsMap.chartTypeOptions[chartType];\n\n      this.setState({\n        ...{\n          _id,\n          title,\n          chartType,\n          metrics: spec.metrics,\n          dimensions: spec.dimensions\n        }\n      });\n    }\n  }\n\n  async componentDidMount() {\n    await this.getSelectOptions();\n    this.preFillForm();\n  }\n\n  getSelectOptions() {\n    return axios\n      .get(\"/api/charts/options\")\n      .then(async ({ data: { dimensions, metrics } }) => {\n        return this.setState({\n          metricOptions: metrics,\n          dimensionOptions: dimensions\n        });\n      });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const payload = this.preparePayload();\n    const verb = this.state._id ? \"put\" : \"post\";\n    axios[verb](\"/api/charts\", payload).then(({ data }) =>\n      this.props.history.push(\"/dashboard\")\n    );\n  };\n  \n\n  preparePayload = () => {\n    let { _id, title, chartType, metrics, dimensions } = this.state;\n\n    metrics = metrics.map(obj => obj.value);\n    dimensions = dimensions.map(obj => obj.value);\n\n    return {\n      _id,\n      title,\n      type: chartType.value,\n      spec: {\n        metrics,\n        dimensions\n      }\n    };\n  };\n\n  handleTitleInput = ({ target: { value: title } }) => {\n    this.setState({ title });\n  };\n\n  handleSelect = (field, defaultValue) => {\n    return value => {\n      this.setState({ [field]: value || defaultValue });\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <Container fluid className=\"main-content-container px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle sm=\"4\" title=\"Chart\" className=\"text-sm-left\" />\n          </Row>\n          <Row>\n            <Col lg=\"12\" className=\"mb-4\">\n              <Card small>\n                <ListGroup flush>\n                  <ListGroupItem className=\"p-3\">\n                    <Row>\n                      <Col>\n                        <Form onSubmit={this.handleSubmit}>\n                          <Row form>\n                            <Col md=\"12\" className=\"form-group\">\n                              <label htmlFor=\"title\">Title</label>\n                              <FormInput\n                                id=\"title\"\n                                type=\"text\"\n                                placeholder=\"Title\"\n                                onChange={this.handleTitleInput}\n                                value={this.state.title}\n                              />\n                            </Col>\n                            <Col md=\"12\" className=\"form-group\">\n                              <label htmlFor=\"chartType\">Chart Type</label>\n                              <Select\n                                id=\"chartType\"\n                                placeholder=\"Chart Type\"\n                                value={this.state.chartType}\n                                onChange={this.handleSelect(\"chartType\", \"\")}\n                                options={this.state.chartTypeOptions}\n                              />\n                            </Col>\n                          </Row>\n\n                          <Row form>\n                            <Col md=\"12\" className=\"form-group\">\n                              <label htmlFor=\"metrics\">Metrics</label>\n                              <Select\n                                id=\"metrics\"\n                                placeholder=\"Metrics\"\n                                closeMenuOnSelect={false}\n                                onChange={this.handleSelect(\"metrics\", [])}\n                                value={this.state.metrics}\n                                isMulti\n                                options={this.state.metricOptions}\n                              />\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col md=\"12\" className=\"form-group\">\n                              <label htmlFor=\"dimensions\">Dimensions</label>\n                              <Select\n                                id=\"dimensions\"\n                                placeholder=\"Dimensions\"\n                                closeMenuOnSelect={false}\n                                onChange={this.handleSelect(\"dimensions\", [])}\n                                value={this.state.dimensions}\n                                isMulti\n                                options={this.state.dimensionOptions}\n                              />\n                            </Col>\n                          </Row>\n\n                          <Button\n                            onClick={this.props.history.goBack}\n                            theme=\"danger\"\n                            className=\"mb-2 mr-1\"\n                          >\n                            Cancel\n                          </Button>\n                          <Button\n                            type=\"submit\"\n                            theme=\"primary\"\n                            className=\"mb-2 mr-1\"\n                          >\n                            Save\n                          </Button>\n                        </Form>\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ChartForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Row,\n  Card,\n  CardHeader,\n  CardBody,\n  ListGroup,\n  ListGroupItem,\n  FormCheckbox,\n  FormInput,\n  FormSelect,\n  Button,\n} from \"shards-react\";\n\nexport default class Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: 'white',\n      pieceCount: 3,\n      showNotation: false,\n      disabledStart: false,\n    };\n  }\n\n  handleStart = () => {\n    this.setState({disabledStart: true}, () => {\n      this.props.onStart(this.state);\n    })\n    \n  }\n\n  handleShowNotation = ({ target: { checked } }) => {\n    this.setState({showNotation: checked, disabledStart: false})    \n  };\n\n  handlePieceCount = ({ target: { value } }) => {\n    this.setState({ pieceCount: value, disabledStart: false })\n  };\n\n  handleOrientation = ({ target: { value } }) => {    \n    this.setState({ orientation: value, disabledStart: false })\n  }\n\n  render() {\n    return (\n      <Card small className=\"mb-3\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Settings</h6>\n        </CardHeader>\n        <CardBody>\n          <ListGroup flush>\n            <ListGroupItem className=\"p-0 px-3 pt-3\">\n              <Row className=\"form-group\">\n                <label htmlFor=\"piece-count\">Number of Pieces</label>\n                <FormInput\n                  value={this.state.pieceCount}\n                  min=\"3\"\n                  id=\"piece-count\"\n                  type=\"number\"\n                  onChange={this.handlePieceCount}\n                />\n              </Row>\n              <Row className=\"form-group\">\n              <label htmlFor=\"orientation\">Orientation</label>\n                <FormSelect \n                onChange={this.handleOrientation}\n                id=\"orientation\">\n                  <option>White</option>\n                  <option>Black</option>                  \n                </FormSelect>\n                </Row>\n                <Row className=\"form-group\">\n                <FormCheckbox onChange={this.handleShowNotation}>\n                  Show Notation\n                </FormCheckbox>\n              </Row>\n              <Row>\n                <Button\n                  disabled={this.state.disabledStart}\n                  onClick={this.handleStart}\n                >Start</Button>\n              </Row>\n            </ListGroupItem>\n          </ListGroup>\n        </CardBody>\n        <CardBody className=\"p-0\" />\n      </Card>\n    );\n  }\n}\n\nSettings.propTypes = {\n  /**\n   * Get a specific setting value\n   */\n  onStart: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup } from \"shards-react\";\n\nconst memorizeMode = \"memorize\";\nconst checkAnswerMode = \"checkanswer\";\nconst answerMode = \"answer\";\n\nexport default class ActionButtons extends Component {\n  buttonDisabled = name => {\n    const { mode } = this.props;\n    switch (name) {\n      case \"next\":\n        return mode !== checkAnswerMode;\n      case \"ready\":\n        return mode !== memorizeMode;\n      case \"submit\":\n        return mode !== answerMode;\n    }\n  };\n  \n  render() {\n    return (\n      <ButtonGroup className=\"col-lg-6\">\n        <Button\n          size={this.props.size}\n          disabled={this.buttonDisabled(\"next\")}\n          theme=\"success\"\n          onClick={this.props.handleNext}\n        >\n          Next\n        </Button>\n        <Button\n          size={this.props.size}\n          disabled={this.buttonDisabled(\"ready\")}\n          theme=\"warning\"\n          onClick={this.props.handleReady}\n        >\n          Ready\n        </Button>\n        <Button\n          size={this.props.size}\n          disabled={this.buttonDisabled(\"submit\")}\n          theme=\"info\"\n          onClick={this.props.handleSubmit}\n        >\n          Submit\n        </Button>\n      </ButtonGroup>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport { Container, Card, Row, Col } from \"shards-react\";\nimport PageTitle from \"../components/common/PageTitle\";\nimport Settings from \"../components/visualization/Settings\";\nimport ActionButtons from \"../components/visualization/ActionButtons\";\nimport axios from \"axios\";\n\nconst memorizeMode = \"memorize\";\nconst checkAnswerMode = \"checkanswer\";\nconst loadingMode = \"loading\";\nconst answerMode = \"answer\";\n\nexport default class Visualization extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      settings: {},\n      mode: loadingMode,\n      position: \"\",\n      draggable: false,\n      squareStyles: {}\n    };\n  }\n\n  handleNext = async () => {\n    const position = await this.getRandomPosition();\n    this.setMemorizeMode(position);\n  };\n\n  setMemorizeMode = position => {\n    return this.setState({\n      position,\n      mode: memorizeMode,\n      draggable: false,\n      squareStyles: {}\n    });\n  };\n\n  setAnswerMode = () => {\n    this.setState({\n      mode: answerMode,\n      position: \"\",\n      draggable: true,\n      sparePieces: true\n    });\n  };\n\n  setCheckAnswerMode = squareStyles => {\n    this.setState({\n      mode: checkAnswerMode,\n      squareStyles\n    });\n  };\n\n  getRandomPosition = () => {\n    return axios\n      .get(\"/api/positions/random\", {\n        params: {\n          pieceCount: this.state.settings.pieceCount\n        }\n      })\n      .then(({ data: { fen } }) => {\n        return fen;\n      });\n  };\n\n  handleOnStart = state => {\n    this.setState({ settings: state }, async () => {\n      const position = await this.getRandomPosition();\n      this.setMemorizeMode(position);\n    });\n  };\n\n  handleSubmit = () => {\n    const solution = this.getFullBoardPosition(this.solution);\n    const answer = this.getFullBoardPosition(this.answer);\n    const squareStyles = this.getSquareStyles(solution, answer);\n    this.setCheckAnswerMode(squareStyles);\n  };\n\n  getSquareStyles = (solution, answer) => {\n    const squareStyles = {};\n    Object.keys(solution).filter(square => {\n      if (solution[square] === answer[square]) {\n        if (solution[square] !== null) {\n          squareStyles[square] = { backgroundColor: \"green\" };\n        }\n      } else {\n        squareStyles[square] = { backgroundColor: \"red\" };\n      }\n    });\n    return squareStyles;\n  };\n\n  getFullBoardPosition = position => {\n    const fullBoardPosition = {};\n    [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"].forEach(column => {\n      for (let rank = 1; rank < 9; rank++) {\n        const key = `${column}${rank}`;\n        fullBoardPosition[key] = position[key] || null;\n      }\n    });\n    return fullBoardPosition;\n  };\n\n  getCurrentPosition = position => {\n    if (this.state.mode === memorizeMode) {\n      this.solution = position;\n    } else {\n      this.answer = position;\n      this.setState({ position });\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle lg=\"4\" title=\"Visualization\" className=\"text-sm-left\" />\n        </Row>\n\n        <Row>\n          <Col lg=\"4\">\n            <Settings onStart={this.handleOnStart} />\n          </Col>\n          <Col lg=\"8\">\n            <Card>\n              <Row>\n                <Col className=\"row justify-content-md-center\">\n                  <Chessboard\n                    width={460}\n                    orientation={this.state.settings.orientation}\n                    showNotation={this.state.settings.showNotation}\n                    draggable={this.state.draggable}\n                    squareStyles={this.state.squareStyles}\n                    position={this.state.position}\n                    sparePieces={true}\n                    getPosition={this.getCurrentPosition}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"mt-3 pb-3\">\n                <Col lg=\"12\" className=\"justify-content-md-center d-flex\">\n                  <ActionButtons\n                    size=\"md\"\n                    mode={this.state.mode}\n                    handleReady={this.setAnswerMode}\n                    handleNext={this.handleNext}\n                    handleSubmit={this.handleSubmit}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout } from \"./layouts\";\n\n// Route Views\nimport Dashboard from \"./views/Dashboard\";\nimport ChartForm from \"./views/ChartForm\";\nimport Visualization from \"./views/Visualization\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/dashboard\" />\n  },\n  {\n    path: \"/dashboard\",\n    layout: DefaultLayout,\n    component: Dashboard\n  },\n  {\n    path: \"/visualization\",\n    layout: DefaultLayout,\n    component: Visualization\n  },\n  {\n    path: \"/chart\",\n    layout: DefaultLayout,\n    component: ChartForm\n  },  \n];\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\n\nexport default () => (\n  <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            render={props => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            }}            \n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n"],"sourceRoot":""}